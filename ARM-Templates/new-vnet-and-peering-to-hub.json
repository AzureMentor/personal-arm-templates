{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "metadata": {
      "comment": "Creates a new vnet and peers it to a hub vnet that already exists, specified in the parameters"
    },
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vNet1Name": {
        "type": "string",
        "defaultValue": "vNet1",
        "metadata": {
          "description": "Name for vNet 1"
        }
      },
      "hubSubscriptionId": {
        "type": "string",
        "defaultValue": "71578c6b-75ba-4865-8f52-3e66d70389fd"
      },
      "hubResourceGroup": {
        "type": "string",
        "defaultValue": "contoso-sharedsvcs-net-rg"
      },
      "hubVnetName": {
        "type": "string",
        "defaultValue": "contoso-sharedsvcs-vnet"
      }
    },
    "variables": {
      "vNet1": {
        "addressSpacePrefix": "192.168.0.0/24",
        "subnetName": "subnet1",
        "subnetPrefix": "192.168.0.0/24"
      },
      "vNet1tovNet2PeeringName": "[concat(parameters('vNet1Name'), '-', 'hub')]",
      "vNet2tovNet1PeeringName": "[concat('hub', '-', parameters('vNet1Name'))]",
      "hubSubscriptionId": "[parameters('hubSubscriptionId')]",
      "hubResourceGroupName": "[parameters('hubResourceGroup')]",
      "hubVnetName": "[parameters('hubVnetName')]",
      "currentSub": "[subscription().subscriptionId]",
      "currentRg": "[resourceGroup().name]"
    },
    "resources": [
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('vNet1Name')]",
        "location": "[resourceGroup().location]",
        "comments": "This is the first vNet",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vNet1').addressSpacePrefix]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('vNet1').subnetName]",
              "properties": {
                "addressPrefix": "[variables('vNet1').subnetPrefix]"
              }
            }
          ]
        },
        "resources": [
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[variables('vNet1tovNet2PeeringName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Network/virtualNetworks/', parameters('vNet1Name'))]"
            ],
            "comments": "This is the peering from vNet 1 to vNet 2",
            "properties": {
              "allowVirtualNetworkAccess": "true",
              "allowForwardedTraffic": "false",
              "allowGatewayTransit": "false",
              "useRemoteGateways": "false",
              "remoteVirtualNetwork": {
                "id": "[resourceId(variables('hubSubscriptionId'), variables('hubResourceGroupName'), 'Microsoft.Network/virtualNetworks', variables('hubvNetName'))]"
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2017-05-10",
        "name": "nestedTemplate",
        "type": "Microsoft.Resources/deployments",
        "resourceGroup": "[variables('hubResourceGroupName')]", // good false positive for language service
        "subscriptionId": "[variables('hubSubscriptionId')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', parameters('vNet1Name'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
            "contentVersion": "1.0.0.0",
            "resources": [
              {
                "apiVersion": "2016-06-01",
                "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                "name": "[concat(variables('hubvNetName'),'/', variables('vNet2tovNet1PeeringName'))]",
                "location": "[resourceGroup().location]",
                "comments": "This is the peering from vNet 2 to vNet 1",
                "properties": {
                  "allowVirtualNetworkAccess": "true",
                  "allowForwardedTraffic": "false",
                  "allowGatewayTransit": "false",
                  "useRemoteGateways": "false",
                  "remoteVirtualNetwork": {
                    "id": "[resourceId(variables('currentSub'), variables('currentRg'), 'Microsoft.Network/virtualNetworks', parameters('vNet1Name'))]"
                  }
                }
              }
            ]
          }
        }
      }
    ]
  }